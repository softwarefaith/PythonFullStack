# 返回函数

"""
把函数作为结果值返回

1.变量可以指向函数

2.函数名也是变量

3.每次都返回一个新函数

"""

# 闭包

"""

1.返回的函数并没有立刻执行,需要调用

2.返回闭包时牢记的一点就是：
返回函数不要引用任何循环变量，或者后续会发生变化的变量。

如果一定要引用循环变量怎么办？

解决方案:
再创建一个函数，用该函数的参数绑定循环变量当前的值，
无论该循环变量后续如何更改，已绑定到函数参数的值不变：


3.缺点是代码较长，可利用lambda函数缩短代码。

"""


def count():
    def f(j):
        def g():
            return j*j
        return g
    fs = []
    for i in range(1, 4):
        fs.append(f(i))  # f(i)立刻被执行，因此i的当前值被传入f()

    return fs